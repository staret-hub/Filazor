@using Filazor.Core.Controller


<div class="modal @modalClass" tabindex="-1" role="dialog" style="display:@modalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">User Info</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="OnDialogClosed">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col">ID: @CurrentUser.UserName</div>
                    <div class="col"></div>
                </div>
                <div class="row">
                    <div class="col">Role: @CurrentUser.Role</div>
                    <div class="col"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal" @onclick="OnDialogClosed">Confirm</button>
            </div>
        </div>
    </div>
</div>

@if (show)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    private string modalClass;
    private string modalDisplay = "none;";
    private bool show;

    [Parameter]
    public bool Show
    {
        set
        {
            show = value;
            if (value)
            {
                modalClass = "show";
                modalDisplay = "block;";
            }
            else
            {
                modalClass = string.Empty;
                modalDisplay = "none;";
            }
        }
    }

    [Parameter]
    public UserModel CurrentUser { get; set; }

    [Parameter]
    public EventCallback<string> UserInfoDialogResultReturned { get; set; }


    private Task OnDialogClosed()
    {
        return UserInfoDialogResultReturned.InvokeAsync(null);
    }
}