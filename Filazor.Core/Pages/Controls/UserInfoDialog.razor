@using Filazor.Core.Controller


<div class="modal @modalClass" tabindex="-1" role="dialog" style="display:@modalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">User Info</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="OnDialogClosed">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group row align-items-center">
                    <label for="textUserID" class="col-sm-5 col-form-label"><small>User ID:</small></label>
                    <div class="col-sm-7 m-0 p-0">
                        <input type="text" readonly class="form-control-plaintext small" id="textUserID" placeholder="User ID" value="@CurrentUser.UserName" />
                    </div>
                </div>
                <div class="form-group row align-items-center">
                    <label for="textRole" class="col-sm-5 col-form-label"><small>Role:</small></label>
                    <div class="col-sm-7 m-0 p-0">
                        <input type="text" readonly class="form-control-plaintext small" id="textRole" placeholder="Role" value="@CurrentUser.Role" />
                    </div>
                </div>

                @*<form>
            <small>
                <div class="form-group row">
                    <label for="textUserID" class="col-sm-5 col-form-label">User ID:</label>
                    <div class="col-sm-7 m-0 p-0">
                        <input type="text" readonly class="form-control-plaintext" id="textUserID" placeholder="User ID" value="@CurrentUser.UserName" />
                    </div>
                </div>
                <div class="form-group row">
                    <label for="textRole" class="col-sm-5 col-form-label">Role:</label>
                    <div class="col-sm-7 m-0 p-0">
                        <input type="text" readonly class="form-control-plaintext" id="textRole" placeholder="Role" value="@CurrentUser.Role" />
                    </div>
                </div>
                <div class="form-group row">
                    <label for="inputCurrentPassword" class="col-sm-5 col-form-label">Current Password:</label>
                    <div class="col-sm-7 m-0 p-0">
                        <input type="password" class="form-control-sm" id="inputCurrentPassword" placeholder="Current Password" />
                    </div>
                </div>
                <div class="form-group row">
                    <label for="inputNewPassword" class="col-sm-5 col-form-label">New Password:</label>
                    <div class="col-sm-7 m-0 p-0">
                        <input type="password" class="form-control-sm" id="inputNewPassword" placeholder="New Password" />
                    </div>
                </div>
                <div class="form-group row">
                    <label for="inputConfirmPassword" class="col-sm-5 col-form-label">Confirm New Password:</label>
                    <div class="col-sm-5 m-0 p-0">
                        <input type="password" class="form-control-sm" id="inputConfirmPassword" placeholder="Confirm New Password" />

                     </div>
                    <div class="col-sm-2 m-0 p-0">
                        <button type="button" class="btn btn-primary btn-sm" @onclick="ChangePassword">Change</button>
                    </div>
                </div>
            </small>
        </form>*@
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary btn-sm" data-dismiss="modal" @onclick="OnDialogClosed">OK</button>
            </div>
        </div>
    </div>
</div>

@if (show)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    private string modalClass;
    private string modalDisplay = "none;";
    private bool show;

    [Parameter]
    public bool Show
    {
        set
        {
            show = value;
            if (value)
            {
                modalClass = "show";
                modalDisplay = "block;";
            }
            else
            {
                modalClass = string.Empty;
                modalDisplay = "none;";
            }
        }
    }

    [Parameter]
    public UserModel CurrentUser { get; set; }

    [Parameter]
    public EventCallback<string> UserInfoDialogResultReturned { get; set; }


    private Task OnDialogClosed()
    {
        return UserInfoDialogResultReturned.InvokeAsync(null);
    }

    private void ChangePassword()
    {
        Console.WriteLine("Change Password!");
    }
}